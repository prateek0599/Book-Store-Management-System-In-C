#include<stdio.h>                  
#include<conio.h>                   //contains delay(),getch(),gotoxy(),etc.
#include <stdlib.h>
#include<string.h>                  //contains strcmp(),strcpy(),strlen(),etc
#include<ctype.h>                   //contains toupper(), tolower(),etc
#include<dos.h>                     //contains _dos_getdate
#include<time.h>
 
#define RETURNTIME 15
 
//list of function prototype
char catagories[][15]={"Computer","Electronics","Electrical","Civil","Mechnnical","Architecture"};
void returnfunc(void);
void mainmenu(void);
void addbooks(void);
void editbooks(void);
void searchbooks(void);
void issuebooks(void);
void viewbooks(void);
void closeapplication(void);
int  getdata();
int  checkid(int);
int t(void);
//void show_mouse(void);
void Password();
void issuerecord();
void loaderanim();
 
FILE *fp,*ft,*fs;
 
//list of global variable
int s;
char findbook;
char password[10]={"prateek"};
 
struct meroDate
{
    int mm,dd,yy;
};
struct books
{
    int id;
    char stname[20];
    char name[20];
    char Author[20];
    int quantity;
    float Price;
    int count;
    int rackno;
    char *cat;
    struct meroDate issued;
    struct meroDate duedate;
};
struct books a;
int main()
 
{
      Password();
      getch();
   return 0;
 
}
void mainmenu()
{
    //loaderanim();
    system("cls");
       //   textbackground(13);
    int i;
    printf("\n ************** MAIN MENU **************");
    printf("\n **************");
    printf("\n ***** 1. Add Books   ");
    printf("\n ***** 2. Search Books");
    printf("\n ***** 3. Issue Books");
    printf("\n ***** 4. View Book list");
    printf("\n ***** 5. Edit Book's Record");
    printf("\n ***** 6. Close Application");
    printf("\n ------------------------------------------");
    printf("\n Enter your choice:");
    switch(getch())
    {
        case '1':
        addbooks();
        break;
        case '2':
        searchbooks();
        break;
    case '3':
        issuebooks();
        break;
        case '4':
        viewbooks();
        break;
        case '5':
        editbooks();
        break;
        case '6':
        {
        system("cls");
        printf("\n Thanks for using the Program..");
        printf("\n Exiting in 5 second...........>");
        //flushall();
        delay(5000);
        exit(0);
        }
        default:
        {
        printf("\n aWrong Entry!!Please re-entered correct option");
        if(getch())
        mainmenu();
        }
 
    }
}
void addbooks(void)    //funtion that add books
{
    system("cls");
    int i;
    printf("\n *********** SELECT CATEGOIES");
    printf("\n ************");
    printf("\n ***** 1. Computer");
    printf("\n ***** 2. Electronics");
    printf("\n ***** 3. Electrical");
    printf("\n ***** 4. Civil");
    printf("\n ***** 5. Mechanical");
    printf("\n ***** 6. Architecture");
    printf("\n ***** 7. Back to main menu");
    printf("\n *******************");
    printf("\n *******************");
    printf("\n Enter your choice:");
    scanf("%d",&s);
    if(s==7)
 
    mainmenu() ;
    system("cls");
    fp=fopen("Bibek.dat","ab+");
    if(getdata()==1)
    {
    a.cat=catagories[s-1];
    fseek(fp,0,SEEK_END);
    fwrite(&a,sizeof(a),1,fp);
    fclose(fp);
    printf("\n The record is sucessfully saved");
    printf("\n Save any more?(Y / N):");
    if(getch()=='n')
        mainmenu();
    else
        system("cls");
        addbooks();
    }
}
void searchbooks()
{
    system("cls");
    int d;
    printf("\n *****************************Search Books*********************************");
    printf("\n **** 1. Search By ID");
    printf("\n **** 2. Search By Name");
    printf("\n Enter Your Choice");
    fp=fopen("Bibek.dat","rb+"); //open file for reading propose
    rewind(fp);   //move pointer at the begining of file
    switch(getch())
    {
      case '1':
    {
        system("cls");
        printf("\n ****Search Books By Id****");
        printf("\n Enter the book id:");
        scanf("%d",&d);
        printf("\n Searching........");
        while(fread(&a,sizeof(a),1,fp)==1)
        {
        if(a.id==d)
        {
            delay(2);
            printf("\n The Book is available");
            printf("\n **************");
            printf("\n **************");
            printf("\n * ID:%d",a.id);printf("\xB2");
            printf("\n * Name:%s",a.name);printf("\xB2");
            printf("\n * Author:%s ",a.Author);printf("\xB2");
            printf("\n * Qantity:%d ",a.quantity);printf("\xB2"); gotoxy(47,11);printf("\xB2");
            printf("\n * Price:Rs.%.2f",a.Price);printf("\xB2");
            printf("\n * Rack No:%d ",a.rackno);printf("\xB2");
            printf("\n **************");
            printf("\n **************");
            findbook='t';
        }
 
        }
        if(findbook!='t')  //checks whether conditiion enters inside loop or not
        {
        printf("\n *******************");
        printf("\n *"); printf("\n *");
        printf("\n *******************");
        printf("\n aNo Record Found");
        }
        printf("\n Try another search?(Y/N)");
        if(getch()=='y')
        searchbooks();
        else
        mainmenu();
        break;
    }
    case '2':
    {
        char s[15];
        system("cls");
        printf("\n ****Search Books By Name****");
        printf("\n Enter Book Name:");
        scanf("%s",s);
        int d=0;
        while(fread(&a,sizeof(a),1,fp)==1)
        {
        if(strcmp(a.name,(s))==0) //checks whether a.name is equal to s or not
        {
            printf("\n The Book is available");
            printf("\n **************");
            printf("\n **************");
            printf("\n * ID:%d",a.id);printf("\*");
            printf("\n * Name:%s",a.name);printf("\*");
            printf("\n * Author:%s",a.Author);printf("\*");
            printf("\n * Qantity:%d",a.quantity);printf("\*");
            printf("\n * Price:Rs.%.2f",a.Price);printf("\*");
            printf("\n * Rack No:%d ",a.rackno);printf("\*");
            printf("\n **************");
            printf("\n **************");
            d++;
        }
 
        }
        if(d==0)
        {
        printf("\n *******************");
        printf("\n *");  printf("\n *");
        printf("\n *******************");
        printf("\n aNo Record Found");
        }
        printf("\n Try another search?(Y/N)");
        if(getch()=='y')
        searchbooks();
        else
        mainmenu();
        break;
    }
    default :
    getch();
    searchbooks();
    }
    fclose(fp);
}
void issuebooks(void)  //function that issue books from library
{
    int t;
 
    system("cls");
    printf("\n ********************************ISSUE SECTION**************************");
    printf("\n ***** 1. Issue a Book");
    printf("\n ***** 2. View Issued Book");
    printf("\n ***** 3. Search Issued Book");
    printf("\n ***** 4. Remove Issued Book");
    printf("\n Enter a Choice:");
    switch(getch())
    {
    case '1':  //issue book
    {
        system("cls");
        int c=0;
        char another='y';
        while(another=='y')
        {
            system("cls");
            printf("\n ***Issue Book section***");
            printf("\n Enter the Book Id:");
            scanf("%d",&t);
            fp=fopen("Bibek.dat","rb");
            fs=fopen("Issue.dat","ab+");
            if(checkid(t)==0) //issues those which are present in library
            {
                printf("\n The book record is available");
                 printf("\n There are %d unissued books in library ",a.quantity);
                 printf("\n The name of book is %s",a.name);
                 printf("\n Enter student name:");
                 scanf("%s",a.stname);
                // struct dosdate_t d; //for current date
                // _dos_getdate(&d);
                // a.issued.dd=d.day;
                // a.issued.mm=d.month;
                 //a.issued.yy=d.year;
                 printf("\n Issued date=%d-%d-%d",a.issued.dd,a.issued.mm,a.issued.yy);
                 printf("\n The BOOK of ID %d is issued",a.id);
                 a.duedate.dd=a.issued.dd+RETURNTIME;   //for return date
                 a.duedate.mm=a.issued.mm;
                 a.duedate.yy=a.issued.yy;
                 if(a.duedate.dd>30)
                 {
                 a.duedate.mm+=a.duedate.dd/30;
                 a.duedate.dd-=30;
 
                 }
                 if(a.duedate.mm>12)
                 {
                a.duedate.yy+=a.duedate.mm/12;
                a.duedate.mm-=12;
 
                 }
                 printf("\n To be return:%d-%d-%d",a.duedate.dd,a.duedate.mm,a.duedate.yy);
                 fseek(fs,sizeof(a),SEEK_END);
                 fwrite(&a,sizeof(a),1,fs);
                 fclose(fs);
                 c=1;
            }
            if(c==0)
            {
            printf("\n No record found");
            }
            printf("\n Issue any more(Y/N):");
            fflush(stdin);
            another=getche();
            fclose(fp);
        }
 
        break;
    }
    case '2':  //show issued book list
    {
        system("cls");
        int j=4;
        printf("\n *******************************Issued book list*******************************\n");
        printf("\n STUDENT NAME    CATEGORY    ID    BOOK NAME    ISSUED DATE    RETURN DATE");
           fs=fopen("Issue.dat","rb");
        while(fread(&a,sizeof(a),1,fs)==1)
        {

            printf("%s",a.stname);
            printf("%s",a.cat);
            printf("%d",a.id);
            printf("%s",a.name);
            printf("%d-%d-%d",a.issued.dd,a.issued.mm,a.issued.yy );
            printf("%d-%d-%d",a.duedate.dd,a.duedate.mm,a.duedate.yy);
            //struct dosdate_t d;
            //_dos_getdate(&d);
//          printf("Current date=%d-%d-%d",d.day,d.month,d.year);
            j++;
 
        }
        fclose(fs);
        returnfunc();
    }
    break;
    case '3':   //search issued books by id
    {
        system("cls");
        printf("\n Enter Book ID:");
        int p,c=0;
        char another='y';
        while(another=='y')
        {
 
            scanf("%d",&p);
            fs=fopen("Issue.dat","rb");
            while(fread(&a,sizeof(a),1,fs)==1)
            {
                if(a.id==p)
                {
                    issuerecord();
                    printf("\n Press any key.......");
                    getch();
                    issuerecord();
                    c=1;
                }
 
            }
            fflush(stdin);
            fclose(fs);
            if(c==0)
            {
                printf("\n No Record Found");
            }
            printf("\n Try Another Search?(Y/N)");
            another=getch();
        }
    }
    break;
    case '4':  //remove issued books from list
    {
        system("cls");
        int b;
        FILE *fg;  //declaration of temporary file for delete
        char another='y';
        while(another=='y')
        {
            printf("\n Enter book id to remove:");
            scanf("%d",&b);
            fs=fopen("Issue.dat","rb+");
            while(fread(&a,sizeof(a),1,fs)==1)
            {
                if(a.id==b)
                {
                    issuerecord();
                    findbook='t';
                }
                if(findbook=='t')
                {
                    printf("\n Do You Want to Remove it?(Y/N)");
                    if(getch()=='y')
                    {
                        fg=fopen("record.dat","wb+");
                        rewind(fs);
                        while(fread(&a,sizeof(a),1,fs)==1)
                        {
                            if(a.id!=b)
                            {
                            fseek(fs,0,SEEK_CUR);
                            fwrite(&a,sizeof(a),1,fg);
                            }
                        }
                        fclose(fs);
                        fclose(fg);
                        remove("Issue.dat");
                        rename("record.dat","Issue.dat");
                        printf("\n The issued book is removed from list");
 
                       }
 
                }
                if(findbook!='t')
                {
                    printf("\n No Record Found");
                }
            }
            printf("\n Delete any more?(Y/N)");
            another=getch();
        }
    }
    default:
    printf("\n aWrong Entry!!");
    getch();
    issuebooks();
    break;
      }
      returnfunc();
}
void viewbooks(void)  //show the list of book persists in library
{
    int i=0,j;
    system("cls");
    printf("\n *********************************Book List*****************************");
    printf(" \n CATEGORY     ID    BOOK NAME     AUTHOR       QTY     PRICE     RackNo ");
    j=4;
    fp=fopen("Bibek.dat","rb");
    while(fread(&a,sizeof(a),1,fp)==1)
    {
    printf("%s\t",a.cat);
    printf("%d\t",a.id);
    printf("%s\t",a.name);
    printf("%s\t",a.Author);
    printf("%d\t",a.quantity);
    printf("%.2f\t",a.Price);
    printf("%d\t",a.rackno);
    j++;
    i=i+a.quantity;
      }
      printf("\n Total Books =%d",i);
      fclose(fp);
      returnfunc();
}
void editbooks(void)  //edit information about book
{
    system("cls");
    int c=0;
    int d,e;
    printf("\n ****Edit Books Section****");
    char another='y';
    while(another=='y')
    {
        system("cls");
        printf("\n Enter Book Id to be edited:");
        scanf("%d",&d);
        fp=fopen("Bibek.dat","rb+");
        while(fread(&a,sizeof(a),1,fp)==1)
        {
            if(checkid(d)==0)
            {
                printf("\n The book is availble");
                printf("\n The Book ID:%d",a.id);
                printf("\n Enter new name:");scanf("%s",a.name);
                printf("\n Enter new Author:");scanf("%s",a.Author);
                printf("\n Enter new quantity:");scanf("%d",&a.quantity);
                printf("\n Enter new price:");scanf("%f",&a.Price);
                printf("\n Enter new rackno:");scanf("%d",&a.rackno);
                printf("\n The record is modified");
                fseek(fp,ftell(fp)-sizeof(a),0);
                fwrite(&a,sizeof(a),1,fp);
                fclose(fp);
                c=1;
            }
            if(c==0)
            {
                printf("\n No record found");
            }
        }
        printf("\n Modify another Record?(Y/N)");
        fflush(stdin);
        another=getch() ;
    }
        returnfunc();
}
void returnfunc(void)
{
    {
    printf("\n Press ENTER to return to main menu");
    }
    a:
    if(getch()==13) //allow only use of enter
    mainmenu();
    else
    goto a;
}
int getdata()
{
    int t;
    printf("\n Enter the Information Below");
    printf("\n ***************");
    printf("\n ************");
    printf("\n *");printf("\n *");
    printf("\n *");printf("\n *");
    printf("\n *");printf("\n *");
    printf("\n *");printf("\n *");
    printf("\n *");printf("\n *");
    printf("\n *");printf("\n *");
    printf("\n *");printf("\n *");
    printf("\n *************");
    printf("\n *************");
    printf("\n Category:");
    printf("%s",catagories[s-1]);
    printf("\n Book ID:\t");
    scanf("%d",&t);
    if(checkid(t) == 0)
    {
        printf("\n aThe book id already exists\a");
        getch();
        mainmenu();
        return 0;
    }
    a.id=t;
    printf("\n Book Name:");
    scanf("%s",a.name);
    printf("\n Author:");
    scanf("%s",a.Author);
    printf("\n Quantity:");
    scanf("%d",&a.quantity);
    printf("\n Price:");
    scanf("%f",&a.Price);
    printf("\n Rack No:");
    scanf("%d",&a.rackno);
    return 1;
}
int checkid(int t)  //check whether the book is exist in library or not
{
    rewind(fp);
    while(fread(&a,sizeof(a),1,fp)==1)
    if(a.id==t)
    return 0;  //returns 0 if book exits
      return 1; //return 1 if it not
}
 
void Password(void) //for password option
{
 
   system("cls");
   char d[25]="Password Protected";
   char ch,pass[10];
   int i=0,j;
   //textbackground(WHITE);
   //textcolor(RED);
    for(j=0;j<20;j++)
    {
    delay(50);
    printf("*");
    }
    for(j=0;j<20;j++)
   {
   delay(50);
   printf("%c",d[j]);
   }
   for(j=0;j<20;j++)
   {
   delay(50);
   printf("*");
   }
   printf("\n Enter Password:");
 
   while(ch!=13)
   {
    ch=getch();
 
    if(ch!=13 && ch!=8){
    putch('*');
    pass[i] = ch;
    i++;
    }
   }
   pass[i] = '\0';
   if(strcmp(pass,password)==0)
   {

    //textcolor(BLINK);
    printf("\n Password match");
    printf("\n Press any key to countinue.....");
    getch();
    mainmenu();
   }
   else
   {
     printf("\n aWarning!! Incorrect Password");
     getch();
     Password();
   }
}
void issuerecord()  //display issued book's information
{
         system("cls");
         printf("\n The Book has taken by Mr. %s",a.stname);
         printf("\n Issued Date:%d-%d-%d",a.issued.dd,a.issued.mm,a.issued.yy);
         printf("\n Returning Date:%d-%d-%d",a.duedate.dd,a.duedate.mm,a.duedate.yy);
}
void loaderanim()
{
int loader;
system("cls");
printf("LOADING........");
printf("\n\n");
for(loader=1;loader<20;loader++)
{
delay(100);printf("%c",219);}
}
//End of program
